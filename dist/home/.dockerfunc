#!/bin/bash
# Bash wrappers for docker run commands

export DOCKER_REPO_PREFIX=nouchka

#
# Helper Functions
#

docker_cleanup(){
	docker container prune -f
	docker image prune -f
}

del_stopped(){
	local name=$1
	local state
	state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm "$name"
	fi
}

#
# Container Aliases
#

git_check(){
	docker run --rm \
		--workdir /files \
		-v "$(pwd):/files:ro" \
		-v "${HOME}/.gitignore:/root/.gitignore:ro" \
		-v "${HOME}/.gitconfig:/root/.gitconfig:ro" \
		${DOCKER_REPO_PREFIX}/gitcheck --quiet -u| egrep 'Local|origin'
}

travis(){
	docker run --rm \
		-v "$(pwd):/workspace:ro" \
		-v "${HOME}/.travis:/travis" \
		${DOCKER_REPO_PREFIX}/travis-cli "$@"
}

phpmd(){
	docker run --rm -it \
		-v "$(pwd):/workspace:ro" \
		denisura/phpmd "$@"
}

hugo(){
	docker run --rm -it \
		--user="node" \
		-p 1313:1313 \
		-v "$(pwd):/src" \
		hugomods/hugo /usr/bin/hugo "$@"
}

sfcheck(){
	docker run --rm \
		-v "$(pwd)/composer.lock:/composer.lock:ro" \
		jsixc/sensiolabs-security-checker:7.1
}

phpcpd(){
	docker run --rm -it \
		-v "$(pwd):/app:ro" \
		gruen/phpcpd ./
}
monit(){
	del_stopped monit
	docker run --restart always -d \
		-p 2812:2812 \
		--name monit \
		registry.gitlab.com/katagena/monit-monitoring
}

adminer(){
	del_stopped adminer
	docker run --rm -d \
		-p 8102:8080 \
		--name adminer \
		adminer
}

ansiblelint(){
	docker run --rm \
		-v "$(pwd):/home/developer/config:ro" \
		nouchka/ansible \
		bash -c 'find . -name "*.yml" | xargs -r ansible-lint' \
		|tee /tmp/ansible-lint.log
	cat /tmp/ansible-lint.log|grep "^[0-9]* "|sort|uniq -c
	cat /tmp/ansible-lint.log|grep "^/home"|awk -F ':' '{print $1}'|uniq -c|sort --reverse --numeric-sort
	cat /tmp/ansible-lint.log|grep "^[0-9]* "|wc -l
}

hadolint(){
	docker run --rm -i hadolint/hadolint < Dockerfile
}

hattrick(){
	mkdir -p "${HOME}/.config/ho"
	docker run --rm -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e "DISPLAY=unix${DISPLAY}" \
		-v "${HOME}/Documents/Hattrick/:/home/user/hrf/" \
		-v "${HOME}/.config/ho/:/home/user/.ho/" \
		--name hattrick \
		${DOCKER_REPO_PREFIX}/hattrick-organiser
}

eclipse(){
	mkdir -p "${HOME}/.eclipse/workspaces"
	mkdir -p "${HOME}/.eclipse/installer"
	mkdir -p "${HOME}/.eclipse/plugins"
	mkdir -p "${HOME}/.eclipse/eclipses"
	mkdir -p "/opt/projects/"
	export $(cat ~/.env | grep "WAKATIME_KEY" | xargs)
	xhost +
	del_stopped eclipse
	docker run --rm -d \
		-p 9000:9000 \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e "DISPLAY=unix${DISPLAY}" \
		-e ECLIPSE_VERSION=katagena-php72 \
		-e PROJECT=katagena \
		-e "SETUP_URL=https://raw.githubusercontent.com/nouchka/docker-oomph/master/setup/" \
		-e WAKATIME_KEY=${WAKATIME_KEY} \
		-v /etc/ssh/ssh_known_hosts:/etc/ssh/ssh_known_hosts:ro \
		-v "${HOME}/.ssh/:/home/developer/.ssh/:ro" \
		-v "${HOME}/.gitconfig:/home/developer/.gitconfig:ro" \
		-v "${HOME}/.gitconfig.local:/home/developer/.gitconfig.local:ro" \
		-v "${HOME}/.gitignore:/home/developer/.gitignore:ro" \
		-v "${HOME}/workspace/:/home/developer/project/" \
		-v "/opt/projects/:/home/developer/opt/" \
		-v "${HOME}/.eclipse/workspaces/:/home/developer/workspace/" \
		-v "${HOME}/.eclipse/installer/:/opt/eclipse-installer/" \
		-v "${HOME}/.eclipse/plugins/:/home/developer/.p2/" \
		-v "${HOME}/.eclipse/eclipses/:/home/developer/eclipse/" \
		--name eclipse \
		nouchka/oomph:php74
}

eclipse_close(){
	docker exec eclipse wmctrl -c eclipse
}

freecad(){
	xhost +
	docker run --rm -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-v $XAUTHORITY:/home/ubuntu/.Xauthority \
		-e "DISPLAY=unix${DISPLAY}" \
		-v "${HOME}/Documents/Freecad:/home/freecad/workspace" \
		--name freecad \
		pyro225/freecad-docker
}

ansible_setup(){
	docker run --rm -it \
		-v $HOME/.ansible/:/etc/ansible/ \
		${DOCKER_REPO_PREFIX}/ansible \
		ansible-galaxy install -p /etc/ansible/roles/ -r /etc/ansible/requirements.yml
}

ansible_doctor(){
	docker run --rm -it \
		-v "$(pwd):/doctor" \
		-w /doctor \
		thegeeklab/ansible-doctor "$@"
}

tor_proxy(){
	docker run -d --restart always -v /etc/localtime:/etc/localtime:ro -p 9050:9050 --name torproxy jess/tor-proxy
	docker run -d --restart always -v /etc/localtime:/etc/localtime:ro -p 8118:8118 --name privoxy --link torproxy:torproxy jess/privoxy
}

# gitleaks detect https://github.com/gitleaks/gitleaks
gitleaks(){
	docker run --rm -v "$(pwd):/path:ro" ghcr.io/gitleaks/gitleaks:latest --source="/path" "$@"
}
